{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isStart","isVisible","listOfGoods","visibleListOfGoods","startButtonHandler","setState","reverseList","reverse","alfabetSortList","sort","a","b","localeCompare","sortListByLength","length","filterLength","event","filter","good","target","value","resetList","this","type","className","classNames","hidden","onClick","onChange","e","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,SAAS,EACTC,WAAW,EACXC,YAAY,GAAD,OAAML,GACjBM,mBAAmB,GAAD,OAAMN,I,EAG1BO,mBAAqB,kBACnB,EAAKC,SAAS,CACZL,SAAS,EACTC,WAAW,K,EAIfK,YAAc,kBACZ,EAAKD,UAAS,SAACN,GAAD,MACZ,CACEI,mBAAoBJ,EAAMI,mBAAmBI,e,EAKnDC,gBAAkB,kBAChB,EAAKH,UAAS,SAAAN,GAAK,MACjB,CACEI,mBAAoBJ,EAAMI,mBAAmBM,MAAK,SAACC,EAAGC,GAAJ,OAChDD,EAAEE,cAAcD,MAElBT,YAAaH,EAAMI,mBAAmBM,MAAK,SAACC,EAAGC,GAAJ,OACzCD,EAAEE,cAAcD,W,EAMxBE,iBAAmB,kBACjB,EAAKR,UAAS,SAAAN,GAAK,MACjB,CACEI,mBAAoBJ,EAAMI,mBAAmBM,MAAK,SAACC,EAAGC,GAAJ,OAChDD,EAAEI,OAASH,EAAEG,UAEfZ,YAAaH,EAAMI,mBAAmBM,MAAK,SAACC,EAAGC,GAAJ,OACzCD,EAAEI,OAASH,EAAEG,e,EAMrBC,aAAe,SAACC,GACd,EAAKX,UAAS,SAAAN,GAAK,MACjB,CAEEI,mBAAoB,YAAIJ,EAAMG,aAAae,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,QAAUE,EAAMG,OAAOC,c,EAK5FC,UAAY,WACV,EAAKhB,UAAS,iBACZ,CACEF,mBAAmB,GAAD,OAAMN,Q,4CAK9B,WAAU,IAAD,OACP,EAAmDyB,KAAKvB,MAAhDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAAWE,EAA5B,EAA4BA,mBAE5B,OACE,qCACE,wBACEoB,KAAK,SACLC,UAAWC,IACT,SACA,CACEC,OAAQ1B,IAGZ2B,QAASL,KAAKlB,mBARhB,mBAYA,sBAAKoB,UAAWC,IACd,UACA,CACEC,QAASzB,IAHb,UAOE,sBAAKuB,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAU,SACVG,QAASL,KAAKhB,YAHhB,qBAOA,wBACEiB,KAAK,SACLC,UAAU,SACVG,QAASL,KAAKd,gBAHhB,iCAOA,wBACEe,KAAK,SACLC,UAAU,SACVG,QAASL,KAAKT,iBAHhB,4BAOA,wBACEU,KAAK,SACLC,UAAU,SACVG,QAASL,KAAKD,UAHhB,mBAOA,yBAAQO,SAAU,SAACC,GAAD,OAAO,EAAKd,aAAac,IAA3C,UACE,wBAAQT,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAGJ,oBAAII,UAAU,cAAd,SACGrB,EAAmB2B,KAAI,SAAAZ,GAAI,OAC1B,oBAAIM,UAAU,OAAd,SACGN,GADuBA,kB,GAtItBa,IAAMC,WAiJTlC,ICtKfmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.391bdc42.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isStart: boolean;\n  isVisible: boolean;\n  listOfGoods: string[];\n  visibleListOfGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isStart: false,\n    isVisible: false,\n    listOfGoods: [...goodsFromServer],\n    visibleListOfGoods: [...goodsFromServer],\n  };\n\n  startButtonHandler = (): void => (\n    this.setState({\n      isStart: true,\n      isVisible: true,\n    })\n  );\n\n  reverseList = () => (\n    this.setState((state) => (\n      {\n        visibleListOfGoods: state.visibleListOfGoods.reverse(),\n      }\n    ))\n  );\n\n  alfabetSortList = () => (\n    this.setState(state => (\n      {\n        visibleListOfGoods: state.visibleListOfGoods.sort((a, b) => (\n          a.localeCompare(b)\n        )),\n        listOfGoods: state.visibleListOfGoods.sort((a, b) => (\n          a.localeCompare(b)\n        )),\n      }\n    ))\n  );\n\n  sortListByLength = () => (\n    this.setState(state => (\n      {\n        visibleListOfGoods: state.visibleListOfGoods.sort((a, b) => (\n          a.length - b.length\n        )),\n        listOfGoods: state.visibleListOfGoods.sort((a, b) => (\n          a.length - b.length\n        )),\n      }\n    ))\n  );\n\n  filterLength = (event: any) => {\n    this.setState(state => (\n      {\n        // eslint-disable-next-line max-len\n        visibleListOfGoods: [...state.listOfGoods].filter(good => good.length >= event.target.value),\n      }\n    ));\n  };\n\n  resetList = () => {\n    this.setState(() => (\n      {\n        visibleListOfGoods: [...goodsFromServer],\n      }\n    ));\n  };\n\n  render() {\n    const { isStart, isVisible, visibleListOfGoods } = this.state;\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            {\n              hidden: isStart,\n            },\n          )}\n          onClick={this.startButtonHandler}\n        >\n          Start\n        </button>\n        <div className={classNames(\n          'content',\n          {\n            hidden: !isVisible,\n          },\n        )}\n        >\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.reverseList}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.alfabetSortList}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.sortListByLength}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.resetList}\n            >\n              Reset\n            </button>\n            <select onChange={(e) => this.filterLength(e)}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n          </div>\n          <ul className=\"listOfGoods\">\n            {visibleListOfGoods.map(good => (\n              <li className=\"good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}